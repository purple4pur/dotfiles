set nocompatible

" ---------
"   Theme
" ---------
set background=light
colorscheme PaperColor

" ----------
"   Common
" ----------
filetype plugin indent on
syntax on
set autochdir
set autoread
set autowrite
set backspace=indent,eol,start
set clipboard+=unnamed
set complete-=i
set cursorline
set fileencodings=ucs-bom,utf-8,cp936 fileencoding=utf-8
set foldcolumn=0
set foldmethod=marker
set hidden
set hlsearch ignorecase smartcase incsearch
set listchars+=tab:>-,trail:~,extends:>,precedes:<
set mouse=a
set noerrorbells
set noshowmatch
set novisualbell
set number
set pastetoggle=<F5>
set scrolloff=8
set showcmd
set showtabline=2
set sidescroll=1
set sidescrolloff=10
set smartindent cindent autoindent
set smarttab shiftwidth=4 tabstop=4 softtabstop=4 expandtab
set splitbelow
set splitright
set t_Co=256
set t_ZH=[3m     " <C-V><ESC>[3m
set t_ZR=[23m    " <C-V><ESC>[23m
set tags+=../tags,../../tags
set textwidth=0
set virtualedit=block
if (v:version >= 705)
    set nofixendofline
endif

" ---------
"   Netrw
" ---------
let g:netrw_alto = 0
let g:netrw_keepdir = 0
let g:netrw_preview = 1
let g:netrw_winsize = 50

" -------
"   GUI
" -------
if has("gui_running")
    set guioptions-=T
    set mousemodel=popup
    if has("gui_win32") || has("nvim")
        set guifont=ç»ˆç«¯æ›´çº±é»‘ä½“-ç®€_Nerd:h11,æ›´çº±é»‘ä½“_Mono_SC_Nerd:h11
    endif
endif

" ----------------
"   Key Mappings
" ----------------
" command
nnoremap ; :
vnoremap ; :
" movement
nnoremap j gj
nnoremap k gk
nnoremap 0 g0
nnoremap $ g$
nnoremap g$ $
nnoremap g0 0
vnoremap j gj
vnoremap k gk
vnoremap 0 g0
vnoremap $ g$
vnoremap g$ $
vnoremap g0 0
nnoremap , ;
inoremap <C-H> <LEFT>
inoremap <C-J> <C-O>gj
inoremap <C-K> <C-O>gk
inoremap <C-L> <RIGHT>
" edit
nnoremap < <<
nnoremap > >>
vnoremap < <gv
vnoremap > >gv
nnoremap <leader>s" ""ciw"<C-R>""<ESC>b
nnoremap <leader>s' ""ciw'<C-R>"'<ESC>b
nnoremap <leader>s( ""ciw(<C-R>")<ESC>b
nnoremap <leader>s[ ""ciw[<C-R>"]<ESC>b
nnoremap <leader>s{ ""ciw{<C-R>"}<ESC>b
nnoremap <leader>s< ""ciw<<C-R>"><ESC>b
nnoremap <leader>s` ""ciw`<C-R>"`<ESC>b
vnoremap <leader>s" ""c"<C-R>""<ESC>
vnoremap <leader>s' ""c'<C-R>"'<ESC>
vnoremap <leader>s( ""c(<C-R>")<ESC>
vnoremap <leader>s[ ""c[<C-R>"]<ESC>
vnoremap <leader>s{ ""c{<C-R>"}<ESC>
vnoremap <leader>s< ""c<<C-R>"><ESC>
vnoremap <leader>s` ""c`<C-R>"`<ESC>
nnoremap <leader>S" F"xf"xb
nnoremap <leader>S' F'xf'xb
nnoremap <leader>S( F(xf)xb
nnoremap <leader>S[ F[xf]xb
nnoremap <leader>S{ F{xf}xb
nnoremap <leader>S< F<xf>xb
nnoremap <leader>S` F`xf`xb
nnoremap <silent> <A-j> :move +1<CR>zz
nnoremap <silent> <A-k> :move -2<CR>zz
vnoremap <silent> <A-j> :move '>+1<CR>gvzz
vnoremap <silent> <A-k> :move '<-2<CR>gvzz
nnoremap <silent> <leader>t? :setlocal tabstop?<CR>
nnoremap <silent> <leader>t2 :setlocal shiftwidth=2 tabstop=2 softtabstop=2 tabstop?<CR>
nnoremap <silent> <leader>t3 :setlocal shiftwidth=3 tabstop=3 softtabstop=3 tabstop?<CR>
nnoremap <silent> <leader>t4 :setlocal shiftwidth=4 tabstop=4 softtabstop=4 tabstop?<CR>
nnoremap <silent> <leader>t8 :setlocal shiftwidth=8 tabstop=8 softtabstop=8 tabstop?<CR>
" search
nnoremap * *zz
nnoremap # #zz
nnoremap n nzz
nnoremap N Nzz
nnoremap <silent> <leader>n :nohlsearch<CR>
" tab
nnoremap <leader>te :tabe<SPACE>
nnoremap <leader>tb :tab sbuffer<SPACE>
nnoremap <leader>gf <C-W>gf
inoremap <silent> <F3> <C-O>:tabprevious<CR>
inoremap <silent> <F4> <C-O>:tabnext<CR>
nnoremap <silent> <F3> :tabprevious<CR>
nnoremap <silent> <F4> :tabnext<CR>
nnoremap <silent> <leader><C-]> :tab tag <C-R><C-W><CR>
" window
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l
nnoremap <leader>< <C-W>10<
nnoremap <leader>> <C-W>10>
nnoremap <leader>- <C-W>5-
nnoremap <leader>+ <C-W>5+
nnoremap <leader>= <C-W>=
autocmd! FileType netrw call FixNetrwMap()
" fold
nnoremap <space> za
nnoremap <silent> <leader>zf :call FoldColumnToggle()<CR>:set foldcolumn?<CR>
nnoremap <silent> <leader>f? :setlocal foldmethod?<CR>
nnoremap <silent> <leader>fi :setlocal foldmethod=indent foldmethod?<CR>
nnoremap <silent> <leader>fm :setlocal foldmethod=marker foldmethod?<CR>
nnoremap <silent> <leader>fs :setlocal foldmethod=syntax foldmethod?<CR>
" diff
nnoremap <silent> <leader>do :diffoff!<CR>
nnoremap <silent> <leader>dt :diffthis<CR>
nnoremap <silent> <leader>du :diffupdate!<CR>
" netrw
nnoremap <silent> <leader>ee :Explore<CR>
nnoremap <silent> <leader>et :Texplore<CR>
nnoremap <silent> <leader>ev :Vexplore!<CR>
" terminal
if has("terminal")
    nnoremap <silent> <leader>T :tab terminal<CR>
    tnoremap <C-\> <C-\><C-N>
elseif has("nvim")
    nnoremap <silent> <leader>T :tabnew +terminal<CR>
    tnoremap <C-\> <C-\><C-N>
endif
" misc
nnoremap <leader>zz /\s\+$<CR>
nnoremap <leader>dz :%s/\s\+$//g<CR>
nnoremap <silent> ZZ :echohl WarningMsg \| echo "ZZ is bad!" \| echohl None<CR>
nnoremap <silent> <leader>zl :setlocal list! list?<CR>
nnoremap <silent> <leader>zw :setlocal wrap! wrap?<CR>
nnoremap <silent> <leader>zc :call ColorColumnToggle()<CR>:set colorcolumn?<CR>

" -------------
"   Functions
" -------------
function! FixNetrwMap()
    if hasmapto('<Plug>NetrwRefresh')
        unmap <buffer> <C-L>
        nnoremap <C-L> <C-W>l
    endif
endfunction

function! FoldColumnToggle()
    if &foldcolumn
        setlocal foldcolumn=0
    else
        setlocal foldcolumn=2
    endif
endfunction

function! ColorColumnToggle()
    if &colorcolumn
        setlocal colorcolumn=
    else
        setlocal colorcolumn=72
    endif
endfunction


" ---------------
"   Status Line
" ---------------
" modified from https://gist.github.com/suderman/1243665

" statusline setup
set laststatus=2
set statusline=%([%{&buflisted?bufnr('%'):''}]\ %)
set statusline+=%F\     " full filename

" display a warning if file encoding isnt utf-8
set statusline+=%#warningmsg#
set statusline+=%{(&fenc!='utf-8'&&&fenc!='')?'['.&fenc.']':''}
set statusline+=%*
set statusline+=%y      " filetype
set statusline+=%r      " read only flag
set statusline+=%m      " modified flag

" display a warning if &paste is set
set statusline+=%#error#
set statusline+=%{&paste?'[paste]':''}
set statusline+=%*
set statusline+=%=\     " left/right separator
set statusline+=%c,     " cursor column
set statusline+=%l/%L   " cursor line/total lines
set statusline+=\ %p%%  " percent through file